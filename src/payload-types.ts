/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    companies: Company;
    'reference-posts': ReferencePost;
    'generated-posts': GeneratedPost;
    campaigns: Campaign;
    'post-analytics': PostAnalytic;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    companies: CompaniesSelect<false> | CompaniesSelect<true>;
    'reference-posts': ReferencePostsSelect<false> | ReferencePostsSelect<true>;
    'generated-posts': GeneratedPostsSelect<false> | GeneratedPostsSelect<true>;
    campaigns: CampaignsSelect<false> | CampaignsSelect<true>;
    'post-analytics': PostAnalyticsSelect<false> | PostAnalyticsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  role: 'admin' | 'manager' | 'content_creator' | 'reviewer';
  company?: (number | null) | Company;
  /**
   * Spezifische Berechtigungen für den Benutzer (optional)
   */
  permissions?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  isActive?: boolean | null;
  /**
   * Letzter Login-Zeitpunkt
   */
  lastLoginAt?: string | null;
  /**
   * UI/Workflow Präferenzen des Benutzers
   */
  preferences?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Profilbild des Benutzers
   */
  avatar?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
  id: number;
  name: string;
  website?: string | null;
  linkedinUrl?: string | null;
  /**
   * LinkedIn Company ID (for future API integration)
   */
  linkedinCompanyId?: string | null;
  /**
   * Number of LinkedIn followers (for future API integration)
   */
  linkedinFollowerCount?: number | null;
  /**
   * LinkedIn Page URL (validated company URL for future API integration)
   */
  linkedinPageUrl?: string | null;
  industry?: string | null;
  size?: ('startup' | 'small' | 'medium' | 'large' | 'enterprise') | null;
  description?: string | null;
  logo?: (number | null) | Media;
  /**
   * AI-generated business overview
   */
  businessOverview?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * AI-generated ideal customer profile
   */
  idealCustomerProfile?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * AI-generated value proposition
   */
  valueProposition?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  researchStatus?: ('pending' | 'in_progress' | 'completed' | 'failed') | null;
  lastResearchAt?: string | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reference-posts".
 */
export interface ReferencePost {
  id: number;
  company: number | Company;
  title?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * LinkedIn author name
   */
  author?: string | null;
  /**
   * LinkedIn profile URL
   */
  authorProfile?: string | null;
  linkedinUrl: string;
  /**
   * LinkedIn Post ID (numeric, for future API integration)
   */
  linkedinPostId?: string | null;
  /**
   * LinkedIn Author ID (for future API integration)
   */
  linkedinAuthorId?: string | null;
  /**
   * LinkedIn Company Page ID (for future API integration)
   */
  linkedinCompanyPageId?: string | null;
  postType: 'text' | 'image' | 'video' | 'article' | 'poll';
  category?:
    | (
        | 'thought_leadership'
        | 'industry_insights'
        | 'company_updates'
        | 'educational'
        | 'behind_scenes'
        | 'case_studies'
      )
    | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  videoUrl?: string | null;
  articleUrl?: string | null;
  likes?: number | null;
  comments?: number | null;
  shares?: number | null;
  /**
   * Calculated engagement rate (0-100)
   */
  engagementRate?: number | null;
  reach?: number | null;
  impressions?: number | null;
  publishedAt: string;
  /**
   * When this post was scraped from LinkedIn
   */
  scrapedAt?: string | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "generated-posts".
 */
export interface GeneratedPost {
  id: number;
  company: number | Company;
  referencePost?: (number | null) | ReferencePost;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  writingStyle: 'story_based' | 'insight_focused' | 'engagement_focused';
  category:
    | 'thought_leadership'
    | 'industry_insights'
    | 'company_updates'
    | 'educational'
    | 'behind_scenes'
    | 'case_studies';
  status?: ('draft' | 'review' | 'approved' | 'scheduled' | 'published' | 'rejected') | null;
  /**
   * AI prompt used for generation
   */
  aiPrompt?: string | null;
  /**
   * AI model used for generation
   */
  aiModel?: string | null;
  /**
   * When this post was generated by AI
   */
  generatedAt?: string | null;
  /**
   * User who reviewed this post
   */
  reviewedBy?: (number | null) | User;
  /**
   * Comments from the reviewer
   */
  reviewComments?: string | null;
  /**
   * When this post was reviewed
   */
  reviewedAt?: string | null;
  /**
   * When this post is scheduled to be published
   */
  scheduledFor?: string | null;
  /**
   * When this post was actually published
   */
  publishedAt?: string | null;
  /**
   * LinkedIn Post ID (numeric, set after publication)
   */
  linkedinPostId?: string | null;
  /**
   * Full LinkedIn post URL after publication
   */
  linkedinPublicationUrl?: string | null;
  /**
   * Date when the post was published on LinkedIn
   */
  linkedinPublicationDate?: string | null;
  images?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Performance analytics for this post
   */
  performance?: (number | PostAnalytic)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post-analytics".
 */
export interface PostAnalytic {
  id: number;
  generatedPost: number | GeneratedPost;
  metricType: 'likes' | 'comments' | 'shares' | 'views' | 'clicks' | 'engagement_rate' | 'reach' | 'impressions';
  /**
   * Metric value (e.g., number of likes, engagement rate percentage)
   */
  value: number;
  /**
   * Date when this metric was recorded
   */
  date: string;
  period?: ('hourly' | 'daily' | 'weekly' | 'monthly') | null;
  /**
   * Source of this metric data
   */
  source?: ('linkedin' | 'manual' | 'api') | null;
  /**
   * Additional metric data and context
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "campaigns".
 */
export interface Campaign {
  id: number;
  company: number | Company;
  name: string;
  description?: string | null;
  startDate: string;
  endDate: string;
  status?: ('draft' | 'active' | 'paused' | 'completed' | 'cancelled') | null;
  /**
   * Generated posts included in this campaign
   */
  generatedPosts?: (number | GeneratedPost)[] | null;
  /**
   * Reference posts used for this campaign
   */
  referencePosts?: (number | ReferencePost)[] | null;
  /**
   * Campaign goals and KPIs
   */
  goals?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Target audience for this campaign
   */
  targetAudience?: string | null;
  /**
   * Campaign budget (optional)
   */
  budget?: number | null;
  /**
   * User who created this campaign
   */
  createdBy: number | User;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'companies';
        value: number | Company;
      } | null)
    | ({
        relationTo: 'reference-posts';
        value: number | ReferencePost;
      } | null)
    | ({
        relationTo: 'generated-posts';
        value: number | GeneratedPost;
      } | null)
    | ({
        relationTo: 'campaigns';
        value: number | Campaign;
      } | null)
    | ({
        relationTo: 'post-analytics';
        value: number | PostAnalytic;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  role?: T;
  company?: T;
  permissions?: T;
  isActive?: T;
  lastLoginAt?: T;
  preferences?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        desktop?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies_select".
 */
export interface CompaniesSelect<T extends boolean = true> {
  name?: T;
  website?: T;
  linkedinUrl?: T;
  linkedinCompanyId?: T;
  linkedinFollowerCount?: T;
  linkedinPageUrl?: T;
  industry?: T;
  size?: T;
  description?: T;
  logo?: T;
  businessOverview?: T;
  idealCustomerProfile?: T;
  valueProposition?: T;
  researchStatus?: T;
  lastResearchAt?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reference-posts_select".
 */
export interface ReferencePostsSelect<T extends boolean = true> {
  company?: T;
  title?: T;
  content?: T;
  author?: T;
  authorProfile?: T;
  linkedinUrl?: T;
  linkedinPostId?: T;
  linkedinAuthorId?: T;
  linkedinCompanyPageId?: T;
  postType?: T;
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  videoUrl?: T;
  articleUrl?: T;
  likes?: T;
  comments?: T;
  shares?: T;
  engagementRate?: T;
  reach?: T;
  impressions?: T;
  publishedAt?: T;
  scrapedAt?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "generated-posts_select".
 */
export interface GeneratedPostsSelect<T extends boolean = true> {
  company?: T;
  referencePost?: T;
  title?: T;
  content?: T;
  writingStyle?: T;
  category?: T;
  status?: T;
  aiPrompt?: T;
  aiModel?: T;
  generatedAt?: T;
  reviewedBy?: T;
  reviewComments?: T;
  reviewedAt?: T;
  scheduledFor?: T;
  publishedAt?: T;
  linkedinPostId?: T;
  linkedinPublicationUrl?: T;
  linkedinPublicationDate?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  performance?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "campaigns_select".
 */
export interface CampaignsSelect<T extends boolean = true> {
  company?: T;
  name?: T;
  description?: T;
  startDate?: T;
  endDate?: T;
  status?: T;
  generatedPosts?: T;
  referencePosts?: T;
  goals?: T;
  targetAudience?: T;
  budget?: T;
  createdBy?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post-analytics_select".
 */
export interface PostAnalyticsSelect<T extends boolean = true> {
  generatedPost?: T;
  metricType?: T;
  value?: T;
  date?: T;
  period?: T;
  source?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}